{
	"info": {
		"name": "rickandmortyapi.com-GraphMan",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "character",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query character($id: ID!) {\n  character(id: $id) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    status # The status of the character ('Alive', 'Dead' or 'unknown').\n    species # The species of the character.\n    type # The type or subspecies of the character.\n    gender # The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n    # origin # The character's origin location\n    # location # The character's last known location\n    image # Link to the character's image. All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n    # episode # Episodes in which this character appeared.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"id\": \"0\"\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "characters",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query characters($page: Int, $filter: FilterCharacter) {\n  characters(page: $page, filter: $filter) {\n    __typename\n    # info\n    # results\n  }\n}",
						"variables": "{\n\t\"page\": null,\n\t\"filter\": null\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "charactersByIds",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query charactersByIds($ids: [ID!]!) {\n  charactersByIds(ids: $ids) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    status # The status of the character ('Alive', 'Dead' or 'unknown').\n    species # The species of the character.\n    type # The type or subspecies of the character.\n    gender # The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n    # origin # The character's origin location\n    # location # The character's last known location\n    image # Link to the character's image. All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n    # episode # Episodes in which this character appeared.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"ids\": [\"0\"]\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "location",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query location($id: ID!) {\n  location(id: $id) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    type # The type or subspecies of the character.\n    dimension # The dimension in which the location is located.\n    # residents # List of characters who have been last seen in the location.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"id\": \"0\"\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "locations",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query locations($page: Int, $filter: FilterLocation) {\n  locations(page: $page, filter: $filter) {\n    __typename\n    # info\n    # results\n  }\n}",
						"variables": "{\n\t\"page\": null,\n\t\"filter\": null\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "locationsByIds",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query locationsByIds($ids: [ID!]!) {\n  locationsByIds(ids: $ids) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    type # The type or subspecies of the character.\n    dimension # The dimension in which the location is located.\n    # residents # List of characters who have been last seen in the location.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"ids\": [\"0\"]\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "episode",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query episode($id: ID!) {\n  episode(id: $id) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    air_date # The air date of the episode.\n    # episode # Episodes in which this character appeared.\n    # characters # List of characters who have been seen in the episode.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"id\": \"0\"\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "episodes",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query episodes($page: Int, $filter: FilterEpisode) {\n  episodes(page: $page, filter: $filter) {\n    __typename\n    # info\n    # results\n  }\n}",
						"variables": "{\n\t\"page\": null,\n\t\"filter\": null\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "episodesByIds",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query episodesByIds($ids: [ID!]!) {\n  episodesByIds(ids: $ids) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    air_date # The air date of the episode.\n    # episode # Episodes in which this character appeared.\n    # characters # List of characters who have been seen in the episode.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"ids\": [\"0\"]\n}"
					}
				},
				"url": {
					"raw": "https://rickandmortyapi.com/graphql",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}